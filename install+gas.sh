#!/bin/bash

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
MINER_DIR="$HOME/heminetwork_v1.0.0_linux_amd64"
CONFIG_FILE="$MINER_DIR/config.sh"
MINER_BIN="popmd"
PACKAGES="jq curl wget unzip nano"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [ "$EUID" -ne 0 ]; then
    echo "‚ùó –°–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω —Å –ø—Ä–∞–≤–∞–º–∏ root (sudo)."
    exit 1
fi

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–∞–∫–µ—Ç–æ–≤
install_packages() {
    echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
    for pkg in $PACKAGES; do
        if dpkg -l | grep -q " $pkg "; then
            echo "‚úÖ $pkg —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        else
            echo "‚û§ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º $pkg..."
            apt update && apt install -y "$pkg"
            if [ $? -ne 0 ]; then
                echo "‚ùó –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ $pkg."
                exit 1
            fi
        fi
    done
}

install_packages

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∞–π–Ω–µ—Ä–∞
if [ -d "$MINER_DIR" ]; then
    echo "‚úÖ –ú–∞–π–Ω–µ—Ä —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
else
    echo "‚¨áÔ∏è –ó–∞–≥—Ä—É–∂–∞–µ–º –º–∞–π–Ω–µ—Ä..."
    wget https://github.com/hemilabs/heminetwork/releases/download/v1.0.0/heminetwork_v1.0.0_linux_amd64.tar.gz
    tar -xvzf heminetwork_v1.0.0_linux_amd64.tar.gz
    if [ ! -d "$MINER_DIR" ]; then
        echo "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –º–∞–π–Ω–µ—Ä."
        exit 1
    fi
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–Ω—Ñ–∏–≥–∞
echo ""
echo "===== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –º–∞–π–Ω–µ—Ä–∞ ====="
read -s -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á BTC: " btc_key
echo ""
read -p "–í–≤–µ–¥–∏—Ç–µ POPM_STATIC_FEE (–Ω–∞–ø—Ä–∏–º–µ—Ä 4): " static_fee
if ! [[ "$static_fee" =~ ^[0-9]+$ ]]; then
    echo "‚ùó POPM_STATIC_FEE –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º!"
    exit 1
fi

cat > "$CONFIG_FILE" <<EOF
#!/bin/bash
export POPM_BTC_PRIVKEY=${btc_key}
export POPM_STATIC_FEE=${static_fee}
export POPM_BFG_URL=wss://pop.hemi.network/v1/ws/public
export POPM_BTC_CHAIN_NAME=mainnet
EOF

chmod +x "$CONFIG_FILE"
echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥ –æ–±–Ω–æ–≤–ª–µ–Ω!"
echo "---------------------------"
cat "$CONFIG_FILE"
echo "---------------------------"

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
source "$CONFIG_FILE"

# –õ–æ–≥
log_message() {
    echo "\$(date '+%Y-%m-%d %H:%M:%S') - \$1"
}

# –û—á–∏—Å—Ç–∫–∞ –ø—Ä–∏ –≤—ã—Ö–æ–¥–µ
cleanup() {
    echo "‚õî –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞..."
    pkill -f "$MINER_BIN"
    exit 0
}
trap cleanup INT

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –º–∞–π–Ω–µ—Ä–∞
start_miner() {
    log_message "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º –º–∞–π–Ω–µ—Ä..."
    cd "$MINER_DIR" || exit 1
    source "$CONFIG_FILE"
    ./"$MINER_BIN" &
}

# --- –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª ---
while true; do
    gas_price=$(curl -s https://mempool.space/api/v1/fees/recommended | jq -r '.fastestFee' 2>/dev/null)
    if [ -z "$gas_price" ] || ! [[ "$gas_price" =~ ^[0-9]+$ ]]; then
        log_message "‚ùó –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –≥–∞–∑–µ. –ü–æ–≤—Ç–æ—Ä —á–µ—Ä–µ–∑ 30 —Å–µ–∫."
        sleep 30
        continue
    fi
    log_message "–ì–∞–∑: \$gas_price sat/vB (–ü–æ—Ä–æ–≥: \$POPM_STATIC_FEE sat/vB)"

    if [ "\$gas_price" -le "\$POPM_STATIC_FEE" ]; then
        if ! pgrep -f "\$MINER_BIN" > /dev/null; then
            start_miner
        else
            log_message "‚úÖ –ú–∞–π–Ω–µ—Ä —É–∂–µ –∑–∞–ø—É—â–µ–Ω."
        fi
    else
        if pgrep -f "\$MINER_BIN" > /dev/null; then
            log_message "‚ö†Ô∏è –ì–∞–∑ –≤—ã—Å–æ–∫–∏–π (\$gas_price > \$POPM_STATIC_FEE). –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–π–Ω–µ—Ä..."
            pkill -f "\$MINER_BIN"
            log_message "üõë –ú–∞–π–Ω–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
        else
            log_message "‚ùó –ì–∞–∑ –≤—ã—Å–æ–∫–∏–π. –û–∂–∏–¥–∞–µ–º..."
        fi
    fi

    sleep 30

    # –ï—Å–ª–∏ –º–∞–π–Ω–µ—Ä –≤—ã–ª–µ—Ç–µ–ª —Å–∞–º, –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º
    if ! pgrep -f "\$MINER_BIN" > /dev/null && [ "\$gas_price" -le "\$POPM_STATIC_FEE" ]; then
        log_message "‚ùó –ú–∞–π–Ω–µ—Ä –≤—ã–∫–ª—é—á–∏–ª—Å—è. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫..."
        start_miner
    fi
done
